@model Project.MVC.ViewModels.VehicleMakeVM

@{
    ViewData["Title"] = "Vehicle Makes";
}

<h1>Vehicle Makes</h1>

<!-- Search Box -->
<form asp-action="Index" method="get">
    <input type="text" name="searchString" value="@Model?.SearchString" placeholder="Search..." />
    <input type="submit" value="Search" class="btn btn-primary" />
</form>

@if (Model?.PaginatedList == null || !Model.PaginatedList.Any())
{
    <p>No makes found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" 
                    asp-route-sortBy="Name" 
                    asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")">
                        Name @(Model.SortOrder == "asc" ? "↑" : "↓")
                    </a>
                </th>
                <th>Abbreviation</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.PaginatedList)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Abrv</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="pagination">
        @if (Model.PaginatedList.HasPreviousPage)
        {
            <a asp-action="Index" 
            asp-route-page="@(Model.PaginatedList.PageIndex - 1)"
            asp-route-sortBy="@Model.CurrentSort"
            asp-route-sortOrder="@Model.SortOrder"
            asp-route-searchString="@Model.SearchString"
            class="btn btn-primary">Previous</a>
        }

        @if (Model.PaginatedList.HasNextPage)
        {
            <a asp-action="Index" 
            asp-route-page="@(Model.PaginatedList.PageIndex + 1)"
            asp-route-sortBy="@Model.CurrentSort"
            asp-route-sortOrder="@Model.SortOrder"
            asp-route-searchString="@Model.SearchString"
            class="btn btn-primary">Next</a>
        }
    </div>
}