@model Project.MVC.Helpers.PagedResult<Project.MVC.ViewModels.VehicleMakeVM>

@{
    ViewData["Title"] = "Vehicle Makes";
}

<div class="container mt-4">
    <h2>Vehicle Makes</h2>
    
    <table class="table table-striped">
        <thead>
            <tr>
                <th>@Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.SortOrder == "asc" ? "desc" : "asc" })</th>
                <th>Abbreviation</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Abbreviation</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        @if (Model.HasPreviousPage)
        {
            <a href="@Url.Action("Index", new { pageNumber = Model.PageNumber - 1 })" class="btn btn-outline-primary">&laquo;</a>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a href="@Url.Action("Index", new { pageNumber = i })" 
            class="@(i == Model.PageNumber ? "btn btn-primary" : "btn btn-outline-primary")">@i</a>
        }

        @if (Model.HasNextPage)
        {
            <a href="@Url.Action("Index", new { pageNumber = Model.PageNumber + 1 })" class="btn btn-outline-primary">&raquo;</a>
        }
    </div>
</div>