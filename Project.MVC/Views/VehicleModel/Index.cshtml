@model Project.MVC.ViewModels.VehicleModelIndexVM

@{
    ViewData["Title"] = "Vehicle Models";
    var currentSort = ViewBag.CurrentSort as string ?? "Name";
    var currentOrder = ViewBag.SortOrder as string ?? "asc";
    var currentMake = ViewBag.MakeId as int?;
    var searchString = ViewBag.SearchString as string ?? "";
}

<h2>Vehicle Models</h2>

<!-- Filter by Make -->
<form asp-action="Index" method="get" class="form-inline mb-3">
    <label class="mr-2">Filter by Make:</label>
    <select name="makeId" asp-items="ViewBag.Makes" class="form-control">
        <option value="">All Makes</option>
    </select>
    <input type="hidden" name="sortBy" value="@currentSort" />
    <input type="hidden" name="sortOrder" value="@currentOrder" />
    <input type="text" name="searchString" value="@searchString" placeholder="Search..." class="form-control ml-2" />
    <button type="submit" class="btn btn-primary ml-2">Apply Filters</button>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" 
                asp-route-sortBy="Name"
                asp-route-sortOrder="@(currentOrder == "asc" ? "desc" : "asc")"
                asp-route-makeId="@currentMake"
                asp-route-searchString="@searchString">
                    Name @(currentSort == "Name" ? (currentOrder == "asc" ? "↑" : "↓") : "")
                </a>
            </th>
            <th>
                <a asp-action="Index" 
                asp-route-sortBy="MakeName"
                asp-route-sortOrder="@(currentOrder == "asc" ? "desc" : "asc")"
                asp-route-makeId="@currentMake"
                asp-route-searchString="@searchString">
                    Make @(currentSort == "MakeName" ? (currentOrder == "asc" ? "↑" : "↓") : "")
                </a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.MakeName</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<div class="pagination-container">
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index"
        asp-route-page="@(Model.PageIndex - 1)"
        asp-route-makeId="@currentMake"
        asp-route-sortBy="@currentSort"
        asp-route-sortOrder="@currentOrder"
        asp-route-searchString="@searchString"
        class="btn btn-primary">
            Previous
        </a>
    }

    <span class="mx-2">
        Page @Model.PageIndex of @Model.TotalPages
    </span>

    @if (Model.HasNextPage)
    {
        <a asp-action="Index"
        asp-route-page="@(Model.PageIndex + 1)"
        asp-route-makeId="@currentMake"
        asp-route-sortBy="@currentSort"
        asp-route-sortOrder="@currentOrder"
        asp-route-searchString="@searchString"
        class="btn btn-primary">
            Next
        </a>
    }
</div>

<style>
    .pagination-container {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 20px;
    }
</style>
