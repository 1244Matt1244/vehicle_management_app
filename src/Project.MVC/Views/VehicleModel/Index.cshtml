@model Project.Service.Shared.PaginatedList<Project.Service.Data.DTOs.VehicleModelDTO>
@using Project.Service.Shared.DTOs
@{
    ViewData["Title"] = "Vehicle Models";
    var makes = ViewBag.Makes as IEnumerable<VehicleMakeDTO>;
}

<h1>Vehicle Models</h1>

<form asp-action="Index" method="get">
    <div class="form-group">
        <label>Filter by Make:</label>
        <select name="makeId" class="form-control" asp-items="@(new SelectList(makes, "Id", "Name"))">
            <option value="">All Makes</option>
        </select>
    </div>
    <div class="form-group">
        <input type="text" name="search" value="@ViewData["CurrentFilter"]" placeholder="Search by name..." />
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" 
                asp-route-sortOrder="@ViewData["NameSort"]" 
                asp-route-search="@ViewData["CurrentFilter"]" 
                asp-route-makeId="@ViewData["CurrentMake"]">
                    Name @(ViewData["NameSort"]?.ToString() == "name_desc" ? "▼" : "▲")
                </a>
            </th>
            <th>Abrv</th>
            <th>Make</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Abrv)</td>
                <td>@Html.DisplayFor(modelItem => item.MakeName)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
asp-route-pageIndex="@(Model.PageIndex - 1)"
asp-route-sortOrder="@ViewData["CurrentSort"]"
asp-route-search="@ViewData["CurrentFilter"]"
asp-route-makeId="@ViewData["CurrentMake"]"
class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
asp-route-pageIndex="@(Model.PageIndex + 1)"
asp-route-sortOrder="@ViewData["CurrentSort"]"
asp-route-search="@ViewData["CurrentFilter"]"
asp-route-makeId="@ViewData["CurrentMake"]"
class="btn btn-default @nextDisabled">
    Next
</a>